version: "{build}"
branches:
  only:
    - master
    - /v\d+\..+/
    - /release.*/
    - appveyor
    - hunter
clone_depth: 100
os: "Visual Studio 2019"
environment:
  matrix:
    - CUDA_VER: "11.2"
  HUNTER_CACHE_TOKEN:
    secure: VnpF1MH5MEFvUI5MiMMMFlmbDdst+bfom5ZFVgalYPp/SYDhbejjXJm9Dla/IgpC

cache:
  - C:\CUDA\v11.1 -> appveyor.yml
  - C:\CUDA\v11.2 -> appveyor.yml

# Download CUDA Windows installer (local) and extract /compiler/* to /CUDA/vX.0/ zip archive.
install: |
  git submodule update --init --recursive
  if "%CUDA_VER%" == "11.1" set CUDA_ARCHIVE=cuda_11.1.1_456.81_win10.exe & set CUDA_ARCHIVE_VER=11.1.1
  if "%CUDA_VER%" == "11.2" set CUDA_ARCHIVE=cuda_11.2.0_460.89_win10.exe & set CUDA_ARCHIVE_VER=11.2.0
  
  if NOT EXIST C:\CUDA mkdir C:\CUDA
  if NOT EXIST C:\CUDA\v%CUDA_VER% (curl -L https://developer.download.nvidia.com/compute/cuda/%CUDA_ARCHIVE_VER%/local_installers/%CUDA_ARCHIVE% -o %CUDA_ARCHIVE%)
  if NOT EXIST C:\CUDA\v%CUDA_VER% (7z x %CUDA_ARCHIVE%.exe -oC:\CUDA cuda_nvcc/nvcc/* cuda_cudart/cudart/* cuda_nvrtc/nvrtc*/*)
  if NOT EXIST C:\CUDA\v%CUDA_VER% ((robocopy C:\CUDA\cuda_nvcc\nvcc C:\CUDA\vv%CUDA_VER% /move /e) ^& if %ERRORLEVEL% LEQ 1 exit 0)
  if NOT EXIST C:\CUDA\v%CUDA_VER% ((robocopy C:\CUDA\cuda_cudart\cudart C:\CUDA\vv%CUDA_VER% /move /e) ^& if %ERRORLEVEL% LEQ 1 exit 0)
  if NOT EXIST C:\CUDA\v%CUDA_VER% ((robocopy C:\CUDA\cuda_nvrtc\nvrtc C:\CUDA\vv%CUDA_VER% /move /e) ^& if %ERRORLEVEL% LEQ 1 exit 0)
  if NOT EXIST C:\CUDA\v%CUDA_VER% ((robocopy C:\CUDA\cuda_nvrtc\nvrtc_dev C:\CUDA\vv%CUDA_VER% /move /e) ^& if %ERRORLEVEL% LEQ 1 exit 0)
  if NOT EXIST C:\CUDA\v%CUDA_VER% (rename C:\CUDA\vv%CUDA_VER% v%CUDA_VER%)

  if NOT EXIST C:\CUDA\v%CUDA_VER% (curl -L https://developer.nvidia.com/compute/cuda/%CUDA_VER%/Prod/local_installers/%CUDA_ARCHIVE% -o %CUDA_ARCHIVE%.exe)
  if NOT EXIST C:\CUDA\v%CUDA_VER% (7z x %CUDA_ARCHIVE%.exe -oC:\CUDA nvcc/* nvrtc*/)
  if NOT EXIST C:\CUDA\v%CUDA_VER% (rename C:\CUDA\nvcc v%CUDA_VER%)

  set PATH=C:\Python36-x64;C:\Python36-x64\Scripts;%PATH%;C:\CUDA\v%CUDA_VER%\bin
  pip install requests gitpython
  nvcc -V

build_script:
  - call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\Common7\Tools\VsMSBuildCmd.bat"
  - set CMAKE_ARGS=-G "Visual Studio 16 2019" -H. -Bbuild -DETHASHCUDA=ON -DAPICORE=ON -DHUNTER_JOBS_NUMBER=%NUMBER_OF_PROCESSORS%
  - cmake %CMAKE_ARGS%
  - cmake --build build --config Release --target package
  - ps: |
      . build/kawpowminer/buildinfo.ps1
      mkdir bin
      cp C:\CUDA\v$env:CUDA_VER\bin\nvrtc*.dll bin\
      7z a build/kawpowminer.zip bin\nvrtc*.dll
      mv build/kawpowminer.zip build/$env:project_name-$env:project_version-cuda$env:CUDA_VER-$env:system_name-$env:system_processor.zip

artifacts:
  - path: build/kawpowminer-*.zip
    name: kawpowminer

